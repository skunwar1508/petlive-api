let langauge = {
    en: {
        success: "Success.",
        feildmissing: "field is missing.",
        phonenotmatch: 'Phone number does not match the format.',
        newaccount: 'Your account created successfully.',
        otpexprire: "OTP expired.",
        accountdeactivated: "Your account is deactivated by admin. Please contact.",
        otpmatched: "OTP matched successfully.",
        otpnotmatched: "Please enter valid OTP.",
        resendotp: 'OTP has been sent to your registered mobile no.',
        userexistswithcreds: "User already exist with these credentials..",
        userexist: "User already exists with this phone number..",
        userexistemail: "User already exists with this email..",
        otpsentemail: "OTP sent on your email.",
        otpsentphone: "OTP sent on your phone.",
        otpMatch: "OTP matched successfully.",
        wrongotp: "Wrong OTP.",
        usernotfound: "User not found.",
        providerExist: "Provider already exist.",
        somethingwentwrong: "Something went wrong.",
        addProvider: "Provider added successfully.",
        proExists: "Provider already exist.",
        statusupdated: "Status updated successfully.",
        commisionupdated: "Commision updated successfully.",
        dataDeleted: "Data deleted successfully.",
        patientExist: "Patient email/phone already exist.",
        addPatient: "Patient added successfully.",
        addTreatment: "Treatment added successfully.",
        updtpass: "Password changed successfully.",
        dashData: "Dashboard data.",
        addLabreport: "Lab Report added successfully.",
        confirmpassword: "Password does not match.",
        wrongpassword: "Wrong password.",
        adminnotfound: "Admin not found.",
        contactusadded: "Contact us query has been generated successfully.",
        catexist: "Category name already exist.",
        catadded: "Category added successfully.",
        alreadyExists: "Data already exists.",
        parentNotFound: "Parent not found.",
        dataUpdated: "Updated successfully.",
        specializationUsed: "Cannot delete specialization, as it is already in use by providers.",
        slotAlreadyBooked: "Slot is already booked.",
        doctorNotFound: "Doctor not found.",
        // slotNotFound: "Slot not found.",
        dayNotFound: "Day not found.",
        slotBooked: "Slot booked successfully.",
        dateDayMismatch: "Date and day mismatch.",
        slotNotFound: "Consultation not available for the selected doctor and consultation type.",
        dayNotAvailable: "Day not available for appointment.",
        cannotBookOnSameDay:"You can not book same day",
        Prescritionadd : "Prescription added successfully.",
        medicieneAdd : "Medicine added successfully.",
        doctorIdORPatientIDMiss : "DoctorId or Patien Id Missing",
        notF : "not Found!",
        addSuc : "added successfully.",
        sevNotForDoc : "severityOfIssue is not allowed for Doctor!",
        artSubApp : "Article submitted for approval",
        notConnected : "Doctor is not connected with patient",
        profileRejected: "Profile rejected by admin. Please contact.",
        profilePending: "Profile is pending for approval.",
        invalidcredentials : "Invalid credentials.",
        otpsent: "OTP has been sent successfully.",
        validationErrorWithData: "Validation error: Missing or invalid data.",
        invalid_patient_or_amount: "Invalid patient ID or amount.",
        patient_not_found: "Patient not found.",
        wallet_amount_added: "Wallet amount added successfully.",
        unauthorized_access: "Unauthorized access.",
        userblocked: "User is blocked.",
        invalidpatientid: "Invalid patient ID.",
        invaliddoctorid: "Invalid doctor ID.",
        invalidpatientid : "Invalid patient ID.",
        passwordreset: "Password reset successfully.",
        accessdenied: "Access denied.",
        categorynotfound: "Category not found.",
        deleted: "Deleted successfully.",
    },
};

module.exports = function(ln, message) {
    return langauge[ln][message] || "Message Error";
};

